{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovies","title","a","fetch","response","json","FindMovie","addMovie","isExist","useState","setTitle","setMovie","error","setError","reset","onFind","useCallback","trim","result","Response","onSend","e","preventDefault","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","onClick","App","setMovies","newMovie","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16f101f8.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img src={movie.Poster} alt=\"Film logo\" />\n        </figure>\n      </div>\n\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n            </figure>\n          </div>\n\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'http://www.omdbapi.com/?i=tt0098936&apikey=85369871&';\n\nexport const getMovies = async (title: string) => {\n  const response = await fetch(`${BASE_URL}t=${title}`);\n\n  return response.json();\n};\n","import React, { useCallback, useState, FormEvent } from 'react';\nimport './FindMovie.scss';\nimport { getMovies } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n  isExist: (movie: Movie) => boolean;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie, isExist }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState('');\n\n  const reset = () => {\n    setMovie(null);\n    setTitle('');\n  };\n\n  const onFind = useCallback(async () => {\n    if (!title.trim()) {\n      setTitle('');\n      setError('Wrong title. Please try again.');\n    } else {\n      const result = await getMovies(title);\n\n      if (result.Response !== 'False') {\n        setMovie(result);\n      } else {\n        setError('Title is not exist.');\n        setMovie(null);\n      }\n    }\n  }, [movie, title]);\n\n  const onSend = useCallback((e: FormEvent) => {\n    e.preventDefault();\n\n    if (!error && movie) {\n      addMovie(movie);\n      reset();\n    }\n  }, [movie, error]);\n\n  const onAddMovie = () => {\n    if (movie && !isExist(movie)) {\n      addMovie(movie);\n      reset();\n    } else if (!movie) {\n      setError('Something wrong. Please try again.');\n    }\n\n    if (movie && isExist(movie)) {\n      setError('Movie already in the list');\n    }\n  };\n\n  const onAdd = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setError('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={onSend}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">Movie title</label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={title}\n              onChange={onAdd}\n            />\n          </div>\n\n          {error && (<p className=\"help is-danger\">{error}</p>)}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={onFind}\n              data-cy=\"find\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              onClick={onAddMovie}\n              data-cy=\"add\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  const isExist = (newMovie: Movie) => {\n    return movies.some(movie => movie.imdbID === newMovie.imdbID);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies && (<MoviesList movies={movies} />)}\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} isExist={isExist} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}